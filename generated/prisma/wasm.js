
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  userId: 'userId',
  userNumber: 'userNumber',
  email: 'email',
  password: 'password',
  name: 'name',
  gender: 'gender',
  birthDate: 'birthDate',
  userType: 'userType',
  tokenVersion: 'tokenVersion',
  role: 'role',
  isActive: 'isActive',
  lastLogin: 'lastLogin',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TestScalarFieldEnum = {
  testId: 'testId',
  testCode: 'testCode',
  title: 'title',
  description: 'description',
  isPublished: 'isPublished',
  createdByNumber: 'createdByNumber',
  createdAt: 'createdAt'
};

exports.Prisma.TestSectionScalarFieldEnum = {
  testSectionId: 'testSectionId',
  testSectionCode: 'testSectionCode',
  testCode: 'testCode',
  name: 'name'
};

exports.Prisma.QuestionScalarFieldEnum = {
  questionId: 'questionId',
  testCode: 'testCode',
  testSectionId: 'testSectionId',
  code: 'code',
  prompt: 'prompt',
  required: 'required',
  metadata: 'metadata'
};

exports.Prisma.QuestionOptionScalarFieldEnum = {
  questionOptionId: 'questionOptionId',
  questionId: 'questionId',
  label: 'label',
  value: 'value',
  scoreValue: 'scoreValue'
};

exports.Prisma.AssignmentScalarFieldEnum = {
  assignmentId: 'assignmentId',
  testCode: 'testCode',
  assignedToId: 'assignedToId',
  assignedById: 'assignedById',
  status: 'status',
  dueAt: 'dueAt',
  startedAt: 'startedAt',
  completedAt: 'completedAt',
  createdAt: 'createdAt'
};

exports.Prisma.AnswerScalarFieldEnum = {
  answerId: 'answerId',
  assignmentId: 'assignmentId',
  questionId: 'questionId',
  questionOptionId: 'questionOptionId',
  numericAnswer: 'numericAnswer',
  score: 'score'
};

exports.Prisma.AssignmentScoreScalarFieldEnum = {
  assignmentId: 'assignmentId',
  totalScore: 'totalScore',
  percentile: 'percentile',
  interpretation: 'interpretation',
  details: 'details'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  refreshTokenId: 'refreshTokenId',
  jti: 'jti',
  userId: 'userId',
  revokedAt: 'revokedAt',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  userAgent: 'userAgent',
  ip: 'ip'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.userRole = exports.$Enums.userRole = {
  admin: 'admin',
  psychologist: 'psychologist',
  user: 'user'
};

exports.userType = exports.$Enums.userType = {
  itm_student: 'itm_student',
  itm_employee: 'itm_employee',
  external: 'external'
};

exports.assignmentStatus = exports.$Enums.assignmentStatus = {
  assigned: 'assigned',
  in_progress: 'in_progress',
  completed: 'completed',
  cancelled: 'cancelled'
};

exports.Prisma.ModelName = {
  user: 'user',
  test: 'test',
  testSection: 'testSection',
  question: 'question',
  questionOption: 'questionOption',
  assignment: 'assignment',
  answer: 'answer',
  assignmentScore: 'assignmentScore',
  refreshToken: 'refreshToken'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/edwinramirez/Desktop/proyecto-neurolab/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/edwinramirez/Desktop/proyecto-neurolab/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum userRole {\n  admin\n  psychologist\n  user\n}\n\nenum userType {\n  itm_student\n  itm_employee\n  external\n}\n\n// enum questionType {\n//   single_choice\n//   multiple_choice\n//   likert\n//   open_text\n//   numeric\n// }\n\nenum assignmentStatus {\n  assigned\n  in_progress\n  completed\n  cancelled\n}\n\nmodel user {\n  userId       String    @id @default(uuid()) @db.Uuid\n  userNumber   String    @unique\n  email        String    @unique\n  password     String\n  name         String\n  gender       String?\n  birthDate    DateTime?\n  userType     userType  @default(external)\n  tokenVersion Int       @default(0)\n  role         userRole\n  isActive     Boolean   @default(false)\n  lastLogin    DateTime?\n  createdAt    DateTime  @default(now())\n  updatedAt    DateTime  @updatedAt\n\n  // relations\n  refreshTokens refreshToken[]\n  createdTests  test[]         @relation(\"testCreatedBy\")\n  assignmentsTo assignment[]   @relation(\"assignedTo\")\n  assignmentsBy assignment[]   @relation(\"assignedBy\")\n\n  @@map(\"user\")\n}\n\nmodel test {\n  testId          String   @id @default(uuid()) @db.Uuid\n  testCode        String?  @unique\n  title           String\n  description     String?\n  isPublished     Boolean  @default(false)\n  createdByNumber String?\n  createdBy       user?    @relation(\"testCreatedBy\", fields: [createdByNumber], references: [userNumber])\n  createdAt       DateTime @default(now())\n\n  sections    testSection[]\n  questions   question[]\n  assignments assignment[]\n\n  @@map(\"tests\")\n}\n\nmodel testSection {\n  testSectionId   String  @id @default(uuid()) @db.Uuid\n  testSectionCode String?\n  testCode        String\n  name            String?\n\n  test      test       @relation(fields: [testCode], references: [testCode], onDelete: Cascade)\n  questions question[]\n\n  @@map(\"testSections\")\n}\n\nmodel question {\n  questionId    String  @id @default(uuid()) @db.Uuid\n  testCode      String\n  testSectionId String? @db.Uuid\n  //type questionType\n  code          String?\n  prompt        String\n  required      Boolean @default(true)\n  metadata      Json?\n\n  section        testSection?     @relation(fields: [testSectionId], references: [testSectionId])\n  test           test             @relation(fields: [testCode], references: [testCode], onDelete: Cascade)\n  questionOption questionOption[]\n  answers        answer[]\n\n  @@unique([testCode, code])\n  @@map(\"questions\")\n}\n\nmodel questionOption {\n  questionOptionId String @id @default(uuid()) @db.Uuid\n  questionId       String @db.Uuid\n\n  label      String\n  value      String?\n  scoreValue Decimal? @db.Decimal(10, 2)\n\n  question question @relation(fields: [questionId], references: [questionId], onDelete: Cascade)\n  answers  answer[]\n\n  @@map(\"questionsOptions\")\n}\n\nmodel assignment {\n  assignmentId String @id @default(uuid()) @db.Uuid\n  testCode     String\n\n  assignedToId String\n  assignedById String\n  status       assignmentStatus @default(assigned)\n\n  dueAt       DateTime?\n  startedAt   DateTime?\n  completedAt DateTime?\n  createdAt   DateTime  @default(now())\n\n  assignedBy user             @relation(\"assignedBy\", fields: [assignedById], references: [userNumber])\n  assignedTo user             @relation(\"assignedTo\", fields: [assignedToId], references: [userNumber])\n  test       test             @relation(fields: [testCode], references: [testCode], onDelete: Cascade, onUpdate: Cascade)\n  answers    answer[]\n  score      assignmentScore?\n\n  @@index([assignedToId, status])\n  @@map(\"assignments\")\n}\n\nmodel answer {\n  answerId         String   @id @default(uuid()) @db.Uuid\n  assignmentId     String   @db.Uuid\n  questionId       String   @db.Uuid\n  questionOptionId String?  @db.Uuid\n  numericAnswer    Decimal? @db.Decimal(12, 4)\n  score            Decimal? @db.Decimal(12, 4)\n\n  question   question        @relation(fields: [questionId], references: [questionId])\n  option     questionOption? @relation(fields: [questionOptionId], references: [questionOptionId])\n  assignment assignment      @relation(fields: [assignmentId], references: [assignmentId], onDelete: Cascade)\n\n  @@unique([assignmentId, questionId])\n  @@map(\"answers\")\n}\n\nmodel assignmentScore {\n  assignmentId String     @id @db.Uuid\n  assignment   assignment @relation(fields: [assignmentId], references: [assignmentId], onDelete: Cascade)\n\n  totalScore     Decimal  @db.Decimal(12, 4)\n  percentile     Decimal? @db.Decimal(6, 3)\n  interpretation String?\n  details        Json?\n\n  @@map(\"assignment_scores\")\n}\n\nmodel refreshToken {\n  refreshTokenId String    @id @default(uuid()) @db.Uuid\n  jti            String    @unique\n  userId         String    @db.Uuid\n  user           user      @relation(fields: [userId], references: [userId], onDelete: Cascade)\n  revokedAt      DateTime?\n  expiresAt      DateTime\n  createdAt      DateTime  @default(now())\n  userAgent      String?\n  ip             String?\n\n  @@index([userId, revokedAt])\n}\n",
  "inlineSchemaHash": "4cd0668ed8636207ea7d872a718fba60e3b772136a240d767c428f2444dbdbdc",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"user\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userType\",\"kind\":\"enum\",\"type\":\"userType\"},{\"name\":\"tokenVersion\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"userRole\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokens\",\"kind\":\"object\",\"type\":\"refreshToken\",\"relationName\":\"refreshTokenTouser\"},{\"name\":\"createdTests\",\"kind\":\"object\",\"type\":\"test\",\"relationName\":\"testCreatedBy\"},{\"name\":\"assignmentsTo\",\"kind\":\"object\",\"type\":\"assignment\",\"relationName\":\"assignedTo\"},{\"name\":\"assignmentsBy\",\"kind\":\"object\",\"type\":\"assignment\",\"relationName\":\"assignedBy\"}],\"dbName\":\"user\"},\"test\":{\"fields\":[{\"name\":\"testId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"testCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublished\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdByNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"testCreatedBy\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sections\",\"kind\":\"object\",\"type\":\"testSection\",\"relationName\":\"testTotestSection\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"question\",\"relationName\":\"questionTotest\"},{\"name\":\"assignments\",\"kind\":\"object\",\"type\":\"assignment\",\"relationName\":\"assignmentTotest\"}],\"dbName\":\"tests\"},\"testSection\":{\"fields\":[{\"name\":\"testSectionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"testSectionCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"testCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"test\",\"kind\":\"object\",\"type\":\"test\",\"relationName\":\"testTotestSection\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"question\",\"relationName\":\"questionTotestSection\"}],\"dbName\":\"testSections\"},\"question\":{\"fields\":[{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"testCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"testSectionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prompt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"required\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"section\",\"kind\":\"object\",\"type\":\"testSection\",\"relationName\":\"questionTotestSection\"},{\"name\":\"test\",\"kind\":\"object\",\"type\":\"test\",\"relationName\":\"questionTotest\"},{\"name\":\"questionOption\",\"kind\":\"object\",\"type\":\"questionOption\",\"relationName\":\"questionToquestionOption\"},{\"name\":\"answers\",\"kind\":\"object\",\"type\":\"answer\",\"relationName\":\"answerToquestion\"}],\"dbName\":\"questions\"},\"questionOption\":{\"fields\":[{\"name\":\"questionOptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scoreValue\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"question\",\"relationName\":\"questionToquestionOption\"},{\"name\":\"answers\",\"kind\":\"object\",\"type\":\"answer\",\"relationName\":\"answerToquestionOption\"}],\"dbName\":\"questionsOptions\"},\"assignment\":{\"fields\":[{\"name\":\"assignmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"testCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedToId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"assignmentStatus\"},{\"name\":\"dueAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"assignedBy\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"assignedBy\"},{\"name\":\"assignedTo\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"assignedTo\"},{\"name\":\"test\",\"kind\":\"object\",\"type\":\"test\",\"relationName\":\"assignmentTotest\"},{\"name\":\"answers\",\"kind\":\"object\",\"type\":\"answer\",\"relationName\":\"answerToassignment\"},{\"name\":\"score\",\"kind\":\"object\",\"type\":\"assignmentScore\",\"relationName\":\"assignmentToassignmentScore\"}],\"dbName\":\"assignments\"},\"answer\":{\"fields\":[{\"name\":\"answerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"questionOptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"numericAnswer\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"question\",\"relationName\":\"answerToquestion\"},{\"name\":\"option\",\"kind\":\"object\",\"type\":\"questionOption\",\"relationName\":\"answerToquestionOption\"},{\"name\":\"assignment\",\"kind\":\"object\",\"type\":\"assignment\",\"relationName\":\"answerToassignment\"}],\"dbName\":\"answers\"},\"assignmentScore\":{\"fields\":[{\"name\":\"assignmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignment\",\"kind\":\"object\",\"type\":\"assignment\",\"relationName\":\"assignmentToassignmentScore\"},{\"name\":\"totalScore\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"percentile\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"interpretation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":\"assignment_scores\"},\"refreshToken\":{\"fields\":[{\"name\":\"refreshTokenId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jti\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"refreshTokenTouser\"},{\"name\":\"revokedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ip\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

